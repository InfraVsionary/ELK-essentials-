services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.ml.enabled=false
      - xpack.monitoring.collection.enabled=false
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks: [elk]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9200 >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 25

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - TELEMETRY_ENABLED=false
      - DATA_SEARCH_ES_QUERY_ALLOWPARTIALSEARCHRESULTS=true
      # simple fixed key to prevent startup warnings in dev
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks: [elk]
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.17.0
    container_name: logstash
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
    volumes:
      - ./stack/logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./stack/logstash/config/jvm.options:/usr/share/logstash/config/jvm.options:ro
    ports:
      - "5044:5044"
    networks: [elk]
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.17.0
    container_name: filebeat
    user: root
    volumes:
      - ./stack/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/log:/host-logs:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks: [elk]
    restart: unless-stopped

volumes:
  elasticsearch-data:

networks:
  elk:
    driver: bridge
